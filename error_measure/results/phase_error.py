#!/usr/bin/python
import numpy as np
import matplotlib.pyplot as plt


def main():
    t0 = [[0.159014, 0.030056], [0.126582, 0.003895], [0.168631, 0.012334], [0.148446, 0.011916], [0.154476, 0.009576],
          [0.155164, 0.010442], [0.140874, 0.007152], [0.174249, 0.009995], [0.161906, 0.007030], [0.151975, 0.009617]]
    t1 = [[0.203317, 0.029493], [0.221772, 0.020209], [0.198866, 0.028939], [0.250699, 0.027715], [0.212549, 0.034251],
          [0.222647, 0.035458], [0.269116, 0.026286], [0.267190, 0.032660], [0.248988, 0.034751], [0.273675, 0.038329]]
    t2 = [[0.243728, 0.027976], [0.195832, 0.017052], [0.207873, 0.026592], [0.246192, 0.012484], [0.245337, 0.020608],
          [0.254374, 0.038504], [0.259619, 0.022797], [0.289911, 0.032625], [0.286964, 0.022149], [0.329489, 0.037434]]
    t3 = [[0.267024, 0.017932], [0.152618, 0.010190], [0.246379, 0.017627], [0.186605, 0.011349], [0.169649, 0.016096],
          [0.180723, 0.018895], [0.204498, 0.014967], [0.187681, 0.011889], [0.214654, 0.015910], [0.195476, 0.015840]]
    # t0 = [[0.177015, 0.012382], [0.144312, 0.007190], [0.120152, 0.008911],
    #       [0.198417, 0.012028], [0.212887, 0.017318], , , , , ]
    # t1 = [[0.206626, 0.014076], [0.184119, 0.012685], [0.212924, 0.014966],
    #       [0.200888, 0.016689], [0.226526, 0.024209], , , , , ]
    # t2 = [[0.232329, 0.029052], [0.236865, 0.022814], [0.172496, 0.010296],
    #       [0.269149, 0.022758], [0.219725, 0.022921], , , , , ]
    # t3 = [[0.248165, 0.028584], [0.200321, 0.011355], [0.196260, 0.021369],
    #       [0.218364, 0.021528], [0.202958, 0.014511], , , , , ]
    task_mean_var = [t0, t1, t2, t3]

    for task_id, data in enumerate(task_mean_var):
        plt.figure(task_id)
        plt.errorbar(np.linspace(1,10,10), np.abs(np.array(data)[:,0]), np.array(data)[:,1],
                     fmt='o', markersize=5, capsize=8, elinewidth=5,
                     markerfacecolor='none', markeredgewidth=1.5, markeredgecolor='w')
        plt.xlim([0, 11])
        plt.grid(True)
        plt.xlabel('Phase factor candidate number')
        plt.ylabel('End-effector positioning error (m)')
    plt.show()

if __name__ == '__main__':
    main()
